{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react-redux-card/my-app/src/planet/planet.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport CustomCard from '../shared/custom-card';\nimport skeleton from '../shared/skeleton';\nimport { fetchPlanets } from './action';\nimport { bindActionCreators } from \"redux\";\n\nconst Planet = ({\n  results,\n  fetchPlanets,\n  pending\n}) => {\n  useEffect(() => {\n    fetchPlanets();\n  }, [fetchPlanets]);\n\n  if (!pending) {\n    console.log(\"hello\");\n    return React.createElement(\"skeleton\", {\n      title: \"People\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(React.Fragment, null, results.map(param => React.createElement(CustomCard, {\n    parms: param,\n    title: \"Planet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => ({\n  results: state.planetReducer.results,\n  pending: state.planetReducer.pending\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchPlanets: fetchPlanets\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Planet);","map":{"version":3,"sources":["/var/www/html/react-redux-card/my-app/src/planet/planet.js"],"names":["React","useEffect","connect","CustomCard","skeleton","fetchPlanets","bindActionCreators","Planet","results","pending","console","log","map","param","mapStateToProps","state","planetReducer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAwB,uBAAxB;AACA,OAAOC,QAAP,MAAsB,oBAAtB;AACA,SAAQC,YAAR,QAA2B,UAA3B;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUH,EAAAA,YAAV;AAAwBI,EAAAA;AAAxB,CAAD,KAAqC;AAChDR,EAAAA,SAAS,CAAC,MAAM;AACbI,IAAAA,YAAY;AACZ,GAFM,EAEJ,CAACA,YAAD,CAFI,CAAT;;AAIA,MAAG,CAACI,OAAJ,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,WAAO;AAAU,MAAA,KAAK,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SAAQ,0CAAGH,OAAO,CAACI,GAAR,CAAaC,KAAD,IAAW,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEA,KAAnB;AAA0B,IAAA,KAAK,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,CAAH,CAAR;AAEH,CAZD;;AAcA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCP,EAAAA,OAAO,EAAEO,KAAK,CAACC,aAAN,CAAoBR,OADG;AAEhCC,EAAAA,OAAO,EAAEM,KAAK,CAACC,aAAN,CAAoBP;AAFG,CAAL,CAA7B;;AAKA,MAAMQ,kBAAkB,GAAIC,QAAD,IAAcZ,kBAAkB,CAAC;AAC1DD,EAAAA,YAAY,EAAEA;AAD4C,CAAD,EAExDa,QAFwD,CAA3D;;AAIA,eAAehB,OAAO,CAACY,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CV,MAA7C,CAAf","sourcesContent":["import React, {useEffect} from \"react\";\nimport { connect } from \"react-redux\";\nimport CustomCard  from '../shared/custom-card'\nimport skeleton  from '../shared/skeleton'\nimport {fetchPlanets} from './action';\nimport { bindActionCreators } from \"redux\";\n\n\nconst Planet = ({results, fetchPlanets, pending}) =>{    \n    useEffect(() => {  \n       fetchPlanets();      \n      }, [fetchPlanets]);\n      \n    if(!pending){\n      console.log(\"hello\")\n      return <skeleton title=\"People\" />\n    }\n    \n    return (<>{results.map((param) => <CustomCard parms={param} title=\"Planet\"/>)}</>)\n\n}\n\nconst mapStateToProps = state => ({\n  results: state.planetReducer.results,\n  pending: state.planetReducer.pending\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  fetchPlanets: fetchPlanets\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Planet);\n"]},"metadata":{},"sourceType":"module"}