{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react-redux-card/my-app/src/film/film.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport CustomCard from '../shared/custom-card';\nimport { fetchFilms } from './action';\nimport { bindActionCreators } from \"redux\";\n\nconst Film = ({\n  results,\n  fetchFilms,\n  pending\n}) => {\n  useEffect(() => {\n    fetchFilms();\n  }, [fetchFilms]);\n\n  if (pending) {\n    return React.createElement(Skeleton, {\n      title: \"Film\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(React.Fragment, null, results.map(param => React.createElement(CustomCard, {\n    parms: param,\n    title: \"Film\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => ({\n  results: state.filmReducer.results,\n  pending: state.filmReducer.pending\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchFilms: fetchFilms\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Film);","map":{"version":3,"sources":["/var/www/html/react-redux-card/my-app/src/film/film.js"],"names":["React","useEffect","connect","CustomCard","fetchFilms","bindActionCreators","Film","results","pending","map","param","mapStateToProps","state","filmReducer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAwB,uBAAxB;AACA,SAAQC,UAAR,QAAyB,UAAzB;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUH,EAAAA,UAAV;AAAsBI,EAAAA;AAAtB,CAAD,KAAmC;AAC5CP,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,UAAU;AACX,GAFM,EAEJ,CAACA,UAAD,CAFI,CAAT;;AAIA,MAAGI,OAAH,EAAW;AACT,WAAO,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,SAAQ,0CAAGD,OAAO,CAACE,GAAR,CAAaC,KAAD,IAAW,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEA,KAAnB;AAA0B,IAAA,KAAK,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,CAAH,CAAR;AAEH,CAVD;;AAYA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCL,EAAAA,OAAO,EAAEK,KAAK,CAACC,WAAN,CAAkBN,OADK;AAEhCC,EAAAA,OAAO,EAAEI,KAAK,CAACC,WAAN,CAAkBL;AAFK,CAAL,CAA7B;;AAKA,MAAMM,kBAAkB,GAAIC,QAAD,IAAcV,kBAAkB,CAAC;AACxDD,EAAAA,UAAU,EAAEA;AAD4C,CAAD,EAExDW,QAFwD,CAA3D;;AAIA,eAAeb,OAAO,CAACS,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CR,IAA7C,CAAf","sourcesContent":["import React, {useEffect} from \"react\";\nimport { connect } from \"react-redux\";\nimport CustomCard  from '../shared/custom-card'\nimport {fetchFilms} from './action';\nimport { bindActionCreators } from \"redux\";\n\n\nconst Film = ({results, fetchFilms, pending}) =>{    \n    useEffect(() => {  \n        fetchFilms();      \n      }, [fetchFilms]);\n\n    if(pending){\n      return <Skeleton title=\"Film\" />\n    } \n    return (<>{results.map((param) => <CustomCard parms={param} title=\"Film\"/>)}</>)\n\n}\n\nconst mapStateToProps = state => ({\n  results: state.filmReducer.results,\n  pending: state.filmReducer.pending\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n    fetchFilms: fetchFilms\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Film);"]},"metadata":{},"sourceType":"module"}